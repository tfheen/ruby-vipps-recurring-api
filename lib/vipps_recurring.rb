=begin
#Recurring Payments Merchant API

## Recurring payments Recurring payments is used for subscription payments such as weekly dues for newspaper access, monthly dues for public transportation, etc. 1. A draft agreement is initialized and the user is redirected for approval. 2. The user approves the agreement and the merchant can call GET on the agreement to verify the status. 3. The merchant can start sending charges which will be charged the user in the future. The merchant is responsible for checking the status of charges, and cancelling any user access if charges are failing (or contacting the user). ## Authentication See <a href=\"#/Access%20Controller/getAccessToken\" target=\"_blank\">Get Access Token</a> For information regarding authentication please read [our guide](https://github.com/vippsas/vipps-recurring-api/blob/master/vipps-recurring-api.md#authentication-and-authorization---api-access-token)

The version of the OpenAPI document: 2.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1-SNAPSHOT

=end

# Common files
require 'vipps_recurring/api_client'
require 'vipps_recurring/api_error'
require 'vipps_recurring/version'
require 'vipps_recurring/configuration'

# Models
require 'vipps_recurring/models/access_token_response'
require 'vipps_recurring/models/agreement'
require 'vipps_recurring/models/agreement_reference'
require 'vipps_recurring/models/agreement_request'
require 'vipps_recurring/models/agreement_status'
require 'vipps_recurring/models/agreement_update'
require 'vipps_recurring/models/agreement_update_reference'
require 'vipps_recurring/models/campaign'
require 'vipps_recurring/models/campaign_all_of'
require 'vipps_recurring/models/campaign_request'
require 'vipps_recurring/models/charge'
require 'vipps_recurring/models/charge_reference'
require 'vipps_recurring/models/charge_request'
require 'vipps_recurring/models/charge_status'
require 'vipps_recurring/models/charge_type'
require 'vipps_recurring/models/currency'
require 'vipps_recurring/models/health_check_status'
require 'vipps_recurring/models/initial_charge'
require 'vipps_recurring/models/interval'
require 'vipps_recurring/models/refund_request'
require 'vipps_recurring/models/transaction_type'
require 'vipps_recurring/models/vipps_api_error'

# APIs
require 'vipps_recurring/api/access_controller_api'
require 'vipps_recurring/api/agreement_controller_api'
require 'vipps_recurring/api/charge_controller_api'

module VippsRecurring
  class << self
    # Customize default settings for the SDK using block.
    #   VippsRecurring.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
