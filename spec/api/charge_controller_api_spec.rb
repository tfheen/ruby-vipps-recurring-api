=begin
#Recurring Payments Merchant API

## Recurring payments Recurring payments is used for subscription payments such as weekly dues for newspaper access, monthly dues for public transportation, etc. 1. A draft agreement is initialized and the user is redirected for approval. 2. The user approves the agreement and the merchant can call GET on the agreement to verify the status. 3. The merchant can start sending charges which will be charged the user in the future. The merchant is responsible for checking the status of charges, and cancelling any user access if charges are failing (or contacting the user). ## Authentication See <a href=\"#/Access%20Controller/getAccessToken\" target=\"_blank\">Get Access Token</a> For information regarding authentication please read [our guide](https://github.com/vippsas/vipps-recurring-api/blob/master/vipps-recurring-api.md#authentication-and-authorization---api-access-token)

The version of the OpenAPI document: 2.1.4

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for VippsRecurring::ChargeControllerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChargeControllerApi' do
  before do
    # run before each test
    @api_instance = VippsRecurring::ChargeControllerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChargeControllerApi' do
    it 'should create an instance of ChargeControllerApi' do
      expect(@api_instance).to be_instance_of(VippsRecurring::ChargeControllerApi)
    end
  end

  # unit tests for cancel_charge
  # Cancel a Charge
  # @param authorization The access token is a base64-encoded string that is required for all API calls. It is a JWT (JSON Web Token). The access token is fetched from the &#x60;POST:/accesstoken/get&#x60; endpoint. It is valid for 1 hour in the test environment and 24 hours in the production environment.
  # @param ocp_apim_subscription_key The subscription key for your API product is available on portal.vipps.no, under the &#39;Utvikler&#39; tab. Keep it secret.
  # @param content_type The content type must be &#x60;application/json&#x60;
  # @param agreement_id The agreement identifier (id)
  # @param charge_id The charge identifier (id)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :idempotency_key Idempotency key
  # @option opts [String] :vipps_system_name The name of the ecommerce solution. One word in lowercase letters is good.
  # @option opts [String] :vipps_system_version The version number of the ecommerce solution.
  # @option opts [String] :vipps_system_plugin_name The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
  # @option opts [String] :vipps_system_plugin_version The version number of the ecommerce plugin (if applicable).
  # @return [nil]
  describe 'cancel_charge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for capture_charge
  # Capture a reserved charge
  # @param authorization The access token is a base64-encoded string that is required for all API calls. It is a JWT (JSON Web Token). The access token is fetched from the &#x60;POST:/accesstoken/get&#x60; endpoint. It is valid for 1 hour in the test environment and 24 hours in the production environment.
  # @param ocp_apim_subscription_key The subscription key for your API product is available on portal.vipps.no, under the &#39;Utvikler&#39; tab. Keep it secret.
  # @param content_type The content type must be &#x60;application/json&#x60;
  # @param idempotency_key Idempotency key
  # @param agreement_id The agreement identifier (id)
  # @param charge_id The charge identifier (id)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :vipps_system_name The name of the ecommerce solution. One word in lowercase letters is good.
  # @option opts [String] :vipps_system_version The version number of the ecommerce solution.
  # @option opts [String] :vipps_system_plugin_name The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
  # @option opts [String] :vipps_system_plugin_version The version number of the ecommerce plugin (if applicable).
  # @return [nil]
  describe 'capture_charge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_charge
  # Create a new charge
  # @param authorization The access token is a base64-encoded string that is required for all API calls. It is a JWT (JSON Web Token). The access token is fetched from the &#x60;POST:/accesstoken/get&#x60; endpoint. It is valid for 1 hour in the test environment and 24 hours in the production environment.
  # @param ocp_apim_subscription_key The subscription key for your API product is available on portal.vipps.no, under the &#39;Utvikler&#39; tab. Keep it secret.
  # @param content_type The content type must be &#x60;application/json&#x60;
  # @param idempotency_key Idempotency-Key
  # @param agreement_id The agreement identifier (id)
  # @param charge_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :vipps_system_name The name of the ecommerce solution. One word in lowercase letters is good.
  # @option opts [String] :vipps_system_version The version number of the ecommerce solution.
  # @option opts [String] :vipps_system_plugin_name The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
  # @option opts [String] :vipps_system_plugin_version The version number of the ecommerce plugin (if applicable).
  # @return [ChargeReference]
  describe 'create_charge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_charge
  # Fetch a Charge
  # @param agreement_id The agreement identifier (id)
  # @param charge_id The charge identifier (id)
  # @param [Hash] opts the optional parameters
  # @return [Charge]
  describe 'get_charge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_charges
  # List Charges
  # @param authorization The access token is a base64-encoded string that is required for all API calls. It is a JWT (JSON Web Token). The access token is fetched from the &#x60;POST:/accesstoken/get&#x60; endpoint. It is valid for 1 hour in the test environment and 24 hours in the production environment.
  # @param ocp_apim_subscription_key The subscription key for your API product is available on portal.vipps.no, under the &#39;Utvikler&#39; tab. Keep it secret.
  # @param agreement_id The agreement identifier (id)
  # @param [Hash] opts the optional parameters
  # @option opts [ChargeStatus] :charge_status The status of the charge
  # @option opts [String] :vipps_system_name The name of the ecommerce solution. One word in lowercase letters is good.
  # @option opts [String] :vipps_system_version The version number of the ecommerce solution.
  # @option opts [String] :vipps_system_plugin_name The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
  # @option opts [String] :vipps_system_plugin_version The version number of the ecommerce plugin (if applicable).
  # @return [Array<Charge>]
  describe 'list_charges test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for refund_charge
  # Refund a charge
  # @param authorization The access token is a base64-encoded string that is required for all API calls. It is a JWT (JSON Web Token). The access token is fetched from the &#x60;POST:/accesstoken/get&#x60; endpoint. It is valid for 1 hour in the test environment and 24 hours in the production environment.
  # @param ocp_apim_subscription_key The subscription key for your API product is available on portal.vipps.no, under the &#39;Utvikler&#39; tab. Keep it secret.
  # @param content_type The content type must be &#x60;application/json&#x60;
  # @param idempotency_key Idempotency key
  # @param agreement_id The agreement identifier (id)
  # @param charge_id The charge identifier (id)
  # @param refund_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :vipps_system_name The name of the ecommerce solution. One word in lowercase letters is good.
  # @option opts [String] :vipps_system_version The version number of the ecommerce solution.
  # @option opts [String] :vipps_system_plugin_name The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.
  # @option opts [String] :vipps_system_plugin_version The version number of the ecommerce plugin (if applicable).
  # @return [nil]
  describe 'refund_charge test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
